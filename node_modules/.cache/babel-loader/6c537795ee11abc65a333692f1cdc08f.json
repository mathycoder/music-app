{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js\";\nimport React from 'react';\nimport Vex from 'vexflow';\n\nconst MusicNotation = () => {\n  // const VF = Vex.Flow;\n  //\n  // // We created an object to store the information about the workspace\n  // var WorkspaceInformation = {\n  //     // The <canvas> element in which you're going to work\n  //     canvas: document.getElementById(\"music-canvas\"),\n  //     // Vex creates a canvas with specific dimensions\n  //     canvasWidth: 500,\n  //     canvasHeight: 500\n  // };\n  //\n  // // Create a renderer with Canvas\n  // var renderer = new VF.Renderer(\n  //     WorkspaceInformation.canvas,\n  //     VF.Renderer.Backends.CANVAS\n  // );\n  //\n  // // Use the renderer to give the dimensions to the canvas\n  // renderer.resize(WorkspaceInformation.canvasWidth, WorkspaceInformation.canvasHeight);\n  //\n  // // Expose the context of the renderer\n  // var context = renderer.getContext();\n  //\n  // // And give some style to our canvas\n  // context.setFont(\"Arial\", 10, \"\").setBackgroundFillStyle(\"#eed\");\n  //\n  //\n  // /**\n  //  * Creating a new stave\n  //  */\n  // // Create a stave of width 400 at position x10, y40 on the canvas.\n  // var stave = new VF.Stave(10, 40, 400);\n  // // Add a clef and time signature.\n  // stave.addClef(\"treble\").addTimeSignature(\"4/4\");\n  // // Set the context of the stave our previous exposed context and execute the method draw !\n  // stave.setContext(context).draw();\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"music-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MusicNotation;","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js"],"names":["React","Vex","MusicNotation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAQ,IAAA,EAAE,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID,CA1CD;;AA4CA,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport Vex from 'vexflow'\n\nconst MusicNotation = () => {\n  // const VF = Vex.Flow;\n  //\n  // // We created an object to store the information about the workspace\n  // var WorkspaceInformation = {\n  //     // The <canvas> element in which you're going to work\n  //     canvas: document.getElementById(\"music-canvas\"),\n  //     // Vex creates a canvas with specific dimensions\n  //     canvasWidth: 500,\n  //     canvasHeight: 500\n  // };\n  //\n  // // Create a renderer with Canvas\n  // var renderer = new VF.Renderer(\n  //     WorkspaceInformation.canvas,\n  //     VF.Renderer.Backends.CANVAS\n  // );\n  //\n  // // Use the renderer to give the dimensions to the canvas\n  // renderer.resize(WorkspaceInformation.canvasWidth, WorkspaceInformation.canvasHeight);\n  //\n  // // Expose the context of the renderer\n  // var context = renderer.getContext();\n  //\n  // // And give some style to our canvas\n  // context.setFont(\"Arial\", 10, \"\").setBackgroundFillStyle(\"#eed\");\n  //\n  //\n  // /**\n  //  * Creating a new stave\n  //  */\n  // // Create a stave of width 400 at position x10, y40 on the canvas.\n  // var stave = new VF.Stave(10, 40, 400);\n  // // Add a clef and time signature.\n  // stave.addClef(\"treble\").addTimeSignature(\"4/4\");\n  // // Set the context of the stave our previous exposed context and execute the method draw !\n  // stave.setContext(context).draw();\n\n  return (\n    <canvas id=\"music-canvas\">\n    </canvas>\n  )\n}\n\nexport default MusicNotation\n"]},"metadata":{},"sourceType":"module"}