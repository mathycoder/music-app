{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport Vex from 'vexflow';\nimport { connect } from 'react-redux';\n\nconst MusicNotation = ({\n  currentNote\n}) => {\n  const [VF, setVF] = useState(Vex.Flow);\n  const rendererRef = useRef(null);\n  const contextRef = useRef(null);\n  useEffect(() => {\n    const div = document.getElementById(\"music-canvas\");\n    rendererRef.current = new VF.Renderer(div, VF.Renderer.Backends.SVG);\n    contextRef.current = rendererRef.current.getContext();\n    rendererRef.current.resize(600, 250);\n    const stave = new VF.Stave(10, 0, 500);\n    stave.addClef(\"treble\").addTimeSignature(\"4/4\");\n    stave.setContext(contextRef.current).draw();\n  }, []); // const drawTriangle = () => {\n  //   contextRef.current.beginPath() // start recording our pen's moves\n  //     .moveTo(0, 0) // pickup the pen and set it down at X=0, Y=0. NOTE: Y=0 is the top of the screen.\n  //     .lineTo(50, 0) // now add a line to the right from (0, 0) to (50, 0) to our path\n  //     .lineTo(25, 50) // add a line to the left and down from (50, 0) to (25, 50)\n  //     .closePath() // now add a line back to wherever the path started, in this case (0, 0), closing the triangle.\n  //     .fill({ fill: 'yellow' }); // now fill our triangle in yellow.\n  // }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"music-canvas\",\n    style: styles.canvasStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => contextRef.current.svg.removeChild(context.svg.lastChild),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Do Things\"));\n};\n\nconst styles = {\n  canvasStyle: {\n    flex: 1,\n    backgroundColor: 'red'\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentNote: state.currentNote\n  };\n};\n\nexport default connect(mapStateToProps, null)(MusicNotation);","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js"],"names":["React","useRef","useEffect","useState","Vex","connect","MusicNotation","currentNote","VF","setVF","Flow","rendererRef","contextRef","div","document","getElementById","current","Renderer","Backends","SVG","getContext","resize","stave","Stave","addClef","addTimeSignature","setContext","draw","styles","canvasStyle","svg","removeChild","context","lastChild","flex","backgroundColor","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,SAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACzC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAACC,GAAG,CAACM,IAAL,CAA5B;AACA,QAAMC,WAAW,GAAGV,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMW,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAZ;AACAJ,IAAAA,WAAW,CAACK,OAAZ,GAAsB,IAAIR,EAAE,CAACS,QAAP,CAAgBJ,GAAhB,EAAqBL,EAAE,CAACS,QAAH,CAAYC,QAAZ,CAAqBC,GAA1C,CAAtB;AACAP,IAAAA,UAAU,CAACI,OAAX,GAAqBL,WAAW,CAACK,OAAZ,CAAoBI,UAApB,EAArB;AACAT,IAAAA,WAAW,CAACK,OAAZ,CAAoBK,MAApB,CAA2B,GAA3B,EAA+B,GAA/B;AACA,UAAMC,KAAK,GAAG,IAAId,EAAE,CAACe,KAAP,CAAa,EAAb,EAAiB,CAAjB,EAAoB,GAApB,CAAd;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAc,QAAd,EAAwBC,gBAAxB,CAAyC,KAAzC;AACAH,IAAAA,KAAK,CAACI,UAAN,CAAiBd,UAAU,CAACI,OAA5B,EAAqCW,IAArC;AACD,GARQ,EAQN,EARM,CAAT,CALyC,CAezC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,sBACE,uDACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAuB,IAAA,KAAK,EAAEC,MAAM,CAACC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,OAAO,EAAE,MAAMjB,UAAU,CAACI,OAAX,CAAmBc,GAAnB,CAAuBC,WAAvB,CAAmCC,OAAO,CAACF,GAAR,CAAYG,SAA/C,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF;AAMD,CAhCD;;AAkCA,MAAML,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXK,IAAAA,IAAI,EAAE,CADK;AAEXC,IAAAA,eAAe,EAAE;AAFN;AADA,CAAf;;AAOA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACL9B,IAAAA,WAAW,EAAE8B,KAAK,CAAC9B;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeF,OAAO,CAAC+B,eAAD,EAAkB,IAAlB,CAAP,CAA+B9B,aAA/B,CAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport Vex from 'vexflow'\nimport { connect } from 'react-redux'\n\nconst MusicNotation = ({ currentNote }) => {\n  const [VF, setVF] = useState(Vex.Flow)\n  const rendererRef = useRef(null)\n  const contextRef = useRef(null)\n\n  useEffect(() => {\n    const div = document.getElementById(\"music-canvas\")\n    rendererRef.current = new VF.Renderer(div, VF.Renderer.Backends.SVG)\n    contextRef.current = rendererRef.current.getContext()\n    rendererRef.current.resize(600,250)\n    const stave = new VF.Stave(10, 0, 500);\n    stave.addClef(\"treble\").addTimeSignature(\"4/4\");\n    stave.setContext(contextRef.current).draw();\n  }, [])\n\n  // const drawTriangle = () => {\n  //   contextRef.current.beginPath() // start recording our pen's moves\n  //     .moveTo(0, 0) // pickup the pen and set it down at X=0, Y=0. NOTE: Y=0 is the top of the screen.\n  //     .lineTo(50, 0) // now add a line to the right from (0, 0) to (50, 0) to our path\n  //     .lineTo(25, 50) // add a line to the left and down from (50, 0) to (25, 50)\n  //     .closePath() // now add a line back to wherever the path started, in this case (0, 0), closing the triangle.\n  //     .fill({ fill: 'yellow' }); // now fill our triangle in yellow.\n  // }\n\n\n\n  return (\n    <>\n      <div id=\"music-canvas\" style={styles.canvasStyle}></div>\n      <div onClick={() => contextRef.current.svg.removeChild(context.svg.lastChild)}>Do Things</div>\n    </>\n  )\n}\n\nconst styles = {\n  canvasStyle: {\n    flex: 1,\n    backgroundColor: 'red'\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentNote: state.currentNote\n  }\n}\n\nexport default connect(mapStateToProps, null)(MusicNotation)\n"]},"metadata":{},"sourceType":"module"}