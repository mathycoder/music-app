{"ast":null,"code":"// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext'; // To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n\nfunction L(...args) {\n  if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args);\n} // Private helper to draw the hairpin\n\n\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height = params.height / 2;\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x, y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x, y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x, y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo'); // Whether the object is a decrescendo\n\n    this.decrescendo = false; // The staff line to be placed on\n\n    this.line = note_struct.line || 0; // The height at the open end of the cresc/decresc\n\n    this.height = 15;\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0\n    });\n  } // Set the line to center the element on\n\n\n  setLine(line) {\n    this.line = line;\n    return this;\n  } // Set the full height at the open end\n\n\n  setHeight(height) {\n    this.height = height;\n    return this;\n  } // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n\n\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  } // Preformat the note\n\n\n  preFormat() {\n    this.preFormatted = true;\n    return this;\n  } // Render the Crescendo object onto the canvas\n\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n    const begin_x = this.getAbsoluteX();\n    const end_x = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + -3) + 1;\n    L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/crescendo.js"],"names":["Vex","Note","TickContext","L","args","Crescendo","DEBUG","renderHairpin","ctx","params","begin_x","end_x","y","half_height","height","beginPath","reverse","moveTo","lineTo","stroke","closePath","constructor","note_struct","setAttribute","decrescendo","line","Merge","render_options","extend_left","extend_right","y_shift","setLine","setHeight","setDecrescendo","decresc","preFormat","preFormatted","draw","checkContext","setRendered","tick_context","getTickContext","next_context","getNextContext","getAbsoluteX","getX","stave","x","width","getYForLine","context"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\n\nimport { Vex } from './vex';\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\n\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\nfunction L(...args) { if (Crescendo.DEBUG) Vex.L('Vex.Flow.Crescendo', args); }\n\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n  const begin_x = params.begin_x;\n  const end_x = params.end_x;\n  const y = params.y;\n  const half_height =  params.height / 2;\n\n  ctx.beginPath();\n\n  if (params.reverse) {\n    ctx.moveTo(begin_x, y - half_height);\n    ctx.lineTo(end_x,  y);\n    ctx.lineTo(begin_x, y + half_height);\n  } else {\n    ctx.moveTo(end_x,  y - half_height);\n    ctx.lineTo(begin_x, y);\n    ctx.lineTo(end_x,  y + half_height);\n  }\n\n  ctx.stroke();\n  ctx.closePath();\n}\n\nexport class Crescendo extends Note {\n  // Initialize the crescendo's properties\n  constructor(note_struct) {\n    super(note_struct);\n    this.setAttribute('type', 'Crescendo');\n\n    // Whether the object is a decrescendo\n    this.decrescendo = false;\n\n    // The staff line to be placed on\n    this.line = note_struct.line || 0;\n\n    // The height at the open end of the cresc/decresc\n    this.height = 15;\n\n    Vex.Merge(this.render_options, {\n      // Extensions to the length of the crescendo on either side\n      extend_left: 0,\n      extend_right: 0,\n      // Vertical shift\n      y_shift: 0,\n    });\n  }\n\n  // Set the line to center the element on\n  setLine(line) { this.line = line; return this; }\n\n  // Set the full height at the open end\n  setHeight(height) { this.height = height; return this; }\n\n  // Set whether the sign should be a descresendo by passing a bool\n  // to `decresc`\n  setDecrescendo(decresc) {\n    this.decrescendo = decresc;\n    return this;\n  }\n\n  // Preformat the note\n  preFormat() { this.preFormatted = true; return this; }\n\n  // Render the Crescendo object onto the canvas\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const tick_context = this.getTickContext();\n    const next_context = TickContext.getNextContext(tick_context);\n\n    const begin_x = this.getAbsoluteX();\n    const end_x  = next_context ? next_context.getX() : this.stave.x + this.stave.width;\n    const y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n    L(\n      'Drawing ',\n      this.decrescendo ? 'decrescendo ' : 'crescendo ',\n      this.height,\n      'x',\n      begin_x - end_x\n    );\n\n    renderHairpin(this.context, {\n      begin_x: begin_x - this.render_options.extend_left,\n      end_x: end_x + this.render_options.extend_right,\n      y: y + this.render_options.y_shift,\n      height: this.height,\n      reverse: this.decrescendo,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}