{"ast":null,"code":"// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) {\n    // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  noOp() {// do nothing\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/boundingboxcomputation.js"],"names":["BoundingBoxComputation","constructor","x1","y1","x2","y2","Number","NaN","addPoint","width","height","noOp","x","y","isNaN","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","cp1x","cp1y","cp2x","cp2y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","i","f","t","Math","pow","b","a","c","b2ac","t1","sqrt","t2"],"mappings":"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","sourcesContent":["// ## Description\n//\n// Object which computes metrics for a bounding box by continuously\n// taking canvas path commands\n\n// Warning: This file is merely a crutch to get bounding box information without\n// explicit metadata. This is likely to get deprecated following SMuFL support.\n//\n// taken from: https://github.com/gabelerner/canvg/blob/860e418aca67b9a41e858a223d74d375793ec364/ca\n// nvg.js#L449\n\nexport class BoundingBoxComputation {\n  constructor(x1, y1, x2, y2) { // pass in initial points if you want\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n\n    this.addPoint(x1, y1);\n    this.addPoint(x2, y2);\n  }\n\n  width() {\n    return this.x2 - this.x1;\n  }\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n  noOp() {\n    // do nothing\n  }\n\n  addPoint(x, y) {\n    if (x != null) {\n      if (isNaN(this.x1) || isNaN(this.x2)) {\n        this.x1 = x;\n        this.x2 = x;\n      }\n      if (x < this.x1) this.x1 = x;\n      if (x > this.x2) this.x2 = x;\n    }\n\n    if (y != null) {\n      if (isNaN(this.y1) || isNaN(this.y2)) {\n        this.y1 = y;\n        this.y2 = y;\n      }\n      if (y < this.y1) this.y1 = y;\n      if (y > this.y2) this.y2 = y;\n    }\n  }\n\n  addX(x) {\n    this.addPoint(x, null);\n  }\n\n  addY(y) {\n    this.addPoint(null, y);\n  }\n\n  addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n    const cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)\n    const cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    const cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)\n    this.addBezierCurve(p0x, p0y, cp1x, cp1y, cp2x, cp2y, p2x, p2y);\n  }\n\n  addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n    // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    const p0 = [p0x, p0y];\n    const p1 = [p1x, p1y];\n    const p2 = [p2x, p2y];\n    const p3 = [p3x, p3y];\n    let i;\n\n    this.addPoint(p0[0], p0[1]);\n    this.addPoint(p3[0], p3[1]);\n\n    const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n      3 * Math.pow(1 - t, 2) * t * p1[i] +\n      3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n      Math.pow(t, 3) * p3[i];\n\n    for (i = 0; i <= 1; i++) {\n      const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n      const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n      const c = 3 * p1[i] - 3 * p0[i];\n\n      if (a === 0) {\n        if (b === 0) continue;\n        const t = -c / b;\n        if (0 < t && t < 1) {\n          if (i === 0) this.addX(f(t, i));\n          if (i === 1) this.addY(f(t, i));\n        }\n        continue;\n      }\n\n      const b2ac = Math.pow(b, 2) - 4 * c * a;\n      if (b2ac < 0) continue;\n      const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        if (i === 0) this.addX(f(t1, i));\n        if (i === 1) this.addY(f(t1, i));\n      }\n      const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        if (i === 0) this.addX(f(t2, i));\n        if (i === 1) this.addY(f(t2, i));\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}