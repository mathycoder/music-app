{"ast":null,"code":"// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nexport class Volta extends StaveModifier {\n  static get CATEGORY() {\n    return 'voltas';\n  }\n\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold'\n    };\n  }\n\n  getCategory() {\n    return Volta.CATEGORY;\n  }\n\n  setShiftY(y) {\n    this.y_shift = y;\n    return this;\n  }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n\n      default:\n        break;\n    } // If the beginning of a volta, draw measure number\n\n\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/stavevolta.js"],"names":["StaveModifier","Volta","CATEGORY","type","NONE","BEGIN","MID","END","BEGIN_END","constructor","number","x","y_shift","setAttribute","volta","font","family","size","weight","getCategory","setShiftY","y","draw","stave","ctx","checkContext","setRendered","width","top_y","getYForTopText","options","num_lines","vert_height","spacing_between_lines_px","fillRect","save","setFont","fillText","restore"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\n\nimport { StaveModifier } from './stavemodifier';\n\nexport class Volta extends StaveModifier {\n  static get CATEGORY() { return 'voltas'; }\n  static get type() {\n    return {\n      NONE: 1,\n      BEGIN: 2,\n      MID: 3,\n      END: 4,\n      BEGIN_END: 5,\n    };\n  }\n\n  constructor(type, number, x, y_shift) {\n    super();\n    this.setAttribute('type', 'Volta');\n    this.volta = type;\n    this.x = x;\n    this.y_shift = y_shift;\n    this.number = number;\n    this.font = {\n      family: 'sans-serif',\n      size: 9,\n      weight: 'bold',\n    };\n  }\n\n  getCategory() { return Volta.CATEGORY; }\n  setShiftY(y) { this.y_shift = y; return this; }\n\n  draw(stave, x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    let width = stave.width;\n    const top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n    const vert_height = 1.5 * stave.options.spacing_between_lines_px;\n    switch (this.volta) {\n      case Volta.type.BEGIN:\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        break;\n      case Volta.type.END:\n        width -= 5;\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      case Volta.type.BEGIN_END:\n        width -= 3;\n        ctx.fillRect(this.x + x, top_y, 1, vert_height);\n        ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n        break;\n      default:\n        break;\n    }\n    // If the beginning of a volta, draw measure number\n    if (this.volta === Volta.type.BEGIN || this.volta === Volta.type.BEGIN_END) {\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n      ctx.restore();\n    }\n\n    ctx.fillRect(this.x + x, top_y, width, 1);\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}