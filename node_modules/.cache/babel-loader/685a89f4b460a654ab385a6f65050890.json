{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js\";\nimport React, { useRef } from 'react';\nimport Vex from 'vexflow';\n\nconst MusicNotation = () => {\n  const rendererRef = useRef();\n  const vf = new Vex.Flow.Factory({\n    renderer: {\n      elementId: rendererRef.current.id\n    }\n  });\n  const score = vf.EasyScore();\n  const system = vf.System();\n  system.addStave({\n    voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]\n  }).addClef('treble').addTimeSignature('4/4');\n  vf.draw();\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: rendererRef,\n    id: \"music-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MusicNotation;","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js"],"names":["React","useRef","Vex","MusicNotation","rendererRef","vf","Flow","Factory","renderer","elementId","current","id","score","EasyScore","system","System","addStave","voices","voice","notes","addClef","addTimeSignature","draw"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,WAAW,GAAGH,MAAM,EAA1B;AACA,QAAMI,EAAE,GAAG,IAAIH,GAAG,CAACI,IAAJ,CAASC,OAAb,CAAqB;AAACC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,SAAS,EAAEL,WAAW,CAACM,OAAZ,CAAoBC;AAAhC;AAAX,GAArB,CAAX;AACA,QAAMC,KAAK,GAAGP,EAAE,CAACQ,SAAH,EAAd;AACA,QAAMC,MAAM,GAAGT,EAAE,CAACU,MAAH,EAAf;AAEAD,EAAAA,MAAM,CAACE,QAAP,CAAgB;AACdC,IAAAA,MAAM,EAAE,CAACL,KAAK,CAACM,KAAN,CAAYN,KAAK,CAACO,KAAN,CAAY,oBAAZ,CAAZ,CAAD;AADM,GAAhB,EAEGC,OAFH,CAEW,QAFX,EAEqBC,gBAFrB,CAEsC,KAFtC;AAIAhB,EAAAA,EAAE,CAACiB,IAAH;AAEA,sBACE;AAAQ,IAAA,GAAG,EAAElB,WAAb;AAA0B,IAAA,EAAE,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID,CAhBD;;AAkBA,eAAeD,aAAf","sourcesContent":["import React, { useRef } from 'react'\nimport Vex from 'vexflow'\n\nconst MusicNotation = () => {\n  const rendererRef = useRef()\n  const vf = new Vex.Flow.Factory({renderer: {elementId: rendererRef.current.id}});\n  const score = vf.EasyScore();\n  const system = vf.System();\n\n  system.addStave({\n    voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]\n  }).addClef('treble').addTimeSignature('4/4');\n\n  vf.draw();\n\n  return (\n    <canvas ref={rendererRef} id=\"music-canvas\">\n    </canvas>\n  )\n}\n\nexport default MusicNotation\n"]},"metadata":{},"sourceType":"module"}