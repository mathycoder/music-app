{"ast":null,"code":"// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato'; // To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\n\nfunction L(...args) {\n  if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args);\n}\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n    this.line = 1;\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2\n    };\n  } // Set line position of the vibrato bracket\n\n\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n\n  setHarsh(harsh) {\n    this.render_options.harsh = harsh;\n    return this;\n  } // Draw the vibrato bracket on the rendering context\n\n\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n    const y = this.start ? this.start.getStave().getYForTopText(this.line) : this.stop.getStave().getYForTopText(this.line); // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n\n    const start_x = this.start ? this.start.getAbsoluteX() : this.stop.getStave().getTieStartX(); // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n\n    const stop_x = this.stop ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5 : this.start.getStave().getTieEndX() - 10;\n    this.render_options.vibrato_width = stop_x - start_x;\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/vibratobracket.js"],"names":["Vex","Element","Vibrato","L","args","VibratoBracket","DEBUG","constructor","bracket_data","setAttribute","start","stop","line","render_options","harsh","wave_height","wave_width","wave_girth","setLine","setHarsh","draw","ctx","context","setRendered","y","getStave","getYForTopText","start_x","getAbsoluteX","getTieStartX","stop_x","getWidth","getTieEndX","vibrato_width","renderVibrato"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,QAAoB,OAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;;AACA,SAASC,CAAT,CAAW,GAAGC,IAAd,EAAoB;AAAE,MAAIC,cAAc,CAACC,KAAnB,EAA0BN,GAAG,CAACG,CAAJ,CAAM,yBAAN,EAAiCC,IAAjC;AAAyC;;AAEzF,OAAO,MAAMC,cAAN,SAA6BJ,OAA7B,CAAqC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,WAAW,CAACC,YAAD,EAAe;AACxB;AACA,SAAKC,YAAL,CAAkB,MAAlB,EAA0B,gBAA1B;AAEA,SAAKC,KAAL,GAAaF,YAAY,CAACE,KAA1B;AACA,SAAKC,IAAL,GAAYH,YAAY,CAACG,IAAzB;AAEA,SAAKC,IAAL,GAAY,CAAZ;AAEA,SAAKC,cAAL,GAAsB;AACpBC,MAAAA,KAAK,EAAE,KADa;AAEpBC,MAAAA,WAAW,EAAE,CAFO;AAGpBC,MAAAA,UAAU,EAAE,CAHQ;AAIpBC,MAAAA,UAAU,EAAE;AAJQ,KAAtB;AAMD,GAvByC,CAyB1C;;;AACAC,EAAAA,OAAO,CAACN,IAAD,EAAO;AAAE,SAAKA,IAAL,GAAYA,IAAZ;AAAkB,WAAO,IAAP;AAAc;;AAChDO,EAAAA,QAAQ,CAACL,KAAD,EAAQ;AAAE,SAAKD,cAAL,CAAoBC,KAApB,GAA4BA,KAA5B;AAAmC,WAAO,IAAP;AAAc,GA3BzB,CA6B1C;;;AACAM,EAAAA,IAAI,GAAG;AACL,UAAMC,GAAG,GAAG,KAAKC,OAAjB;AACA,SAAKC,WAAL;AAEA,UAAMC,CAAC,GAAI,KAAKd,KAAN,GACN,KAAKA,KAAL,CAAWe,QAAX,GAAsBC,cAAtB,CAAqC,KAAKd,IAA1C,CADM,GAEN,KAAKD,IAAL,CAAUc,QAAV,GAAqBC,cAArB,CAAoC,KAAKd,IAAzC,CAFJ,CAJK,CAQL;AACA;;AACA,UAAMe,OAAO,GAAI,KAAKjB,KAAN,GACZ,KAAKA,KAAL,CAAWkB,YAAX,EADY,GAEZ,KAAKjB,IAAL,CAAUc,QAAV,GAAqBI,YAArB,EAFJ,CAVK,CAcL;AACA;;AACA,UAAMC,MAAM,GAAI,KAAKnB,IAAN,GACX,KAAKA,IAAL,CAAUiB,YAAV,KAA2B,KAAKjB,IAAL,CAAUoB,QAAV,EAA3B,GAAkD,CADvC,GAEX,KAAKrB,KAAL,CAAWe,QAAX,GAAsBO,UAAtB,KAAqC,EAFzC;AAIA,SAAKnB,cAAL,CAAoBoB,aAApB,GAAoCH,MAAM,GAAGH,OAA7C;AAEAxB,IAAAA,CAAC,CAAC,oCAAD,EAAuCwB,OAAvC,EAAgD,SAAhD,EAA2DG,MAA3D,EAAmE,IAAnE,EAAyEN,CAAzE,CAAD;AAEAtB,IAAAA,OAAO,CAACgC,aAAR,CAAsBb,GAAtB,EAA2BM,OAA3B,EAAoCH,CAApC,EAAuC,KAAKX,cAA5C;AACD;;AAvDyC","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n//\n// ## Description\n//\n// This file implements `VibratoBrackets`\n// that renders vibrato effect between two notes.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Vibrato } from './vibrato';\n\n// To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`.\nfunction L(...args) { if (VibratoBracket.DEBUG) Vex.L('Vex.Flow.VibratoBracket', args); }\n\nexport class VibratoBracket extends Element {\n  // bracket_data = {\n  //   start: Vex.Flow.Note (optional)\n  //   stop: Vex.Flow.Note (optional)\n  // };\n  // Either the stop or start note must be set, or both of them.\n  // A null value for the start or stop note indicates that the vibrato\n  // is drawn from the beginning or until the end of the stave accordingly.\n  constructor(bracket_data) {\n    super();\n    this.setAttribute('type', 'VibratoBracket');\n\n    this.start = bracket_data.start;\n    this.stop = bracket_data.stop;\n\n    this.line = 1;\n\n    this.render_options = {\n      harsh: false,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n  }\n\n  // Set line position of the vibrato bracket\n  setLine(line) { this.line = line; return this; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n\n  // Draw the vibrato bracket on the rendering context\n  draw() {\n    const ctx = this.context;\n    this.setRendered();\n\n    const y = (this.start)\n      ? this.start.getStave().getYForTopText(this.line)\n      : this.stop.getStave().getYForTopText(this.line);\n\n    // If start note is not set then vibrato will be drawn\n    // from the beginning of the stave\n    const start_x = (this.start)\n      ? this.start.getAbsoluteX()\n      : this.stop.getStave().getTieStartX();\n\n    // If stop note is not set then vibrato will be drawn\n    // until the end of the stave\n    const stop_x = (this.stop)\n      ? this.stop.getAbsoluteX() - this.stop.getWidth() - 5\n      : this.start.getStave().getTieEndX() - 10;\n\n    this.render_options.vibrato_width = stop_x - start_x;\n\n    L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n\n    Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}