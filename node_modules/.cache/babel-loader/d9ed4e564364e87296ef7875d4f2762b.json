{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js\";\nimport React from 'react';\nimport Vex from 'vexflow';\n\nconst MusicNotation = () => {\n  VF = Vex.Flow; // We created an object to store the information about the workspace\n\n  var WorkspaceInformation = {\n    // The <canvas> element in which you're going to work\n    canvas: document.getElementById(\"some-canvas-id\"),\n    // Vex creates a canvas with specific dimensions\n    canvasWidth: 500,\n    canvasHeight: 500\n  }; // Create a renderer with Canvas\n\n  var renderer = new VF.Renderer(WorkspaceInformation.canvas, VF.Renderer.Backends.CANVAS); // Use the renderer to give the dimensions to the canvas\n\n  renderer.resize(WorkspaceInformation.canvasWidth, WorkspaceInformation.canvasHeight); // Expose the context of the renderer\n\n  var context = renderer.getContext(); // And give some style to our canvas\n\n  context.setFont(\"Arial\", 10, \"\").setBackgroundFillStyle(\"#eed\");\n  /**\n   * Creating a new stave\n   */\n  // Create a stave of width 400 at position x10, y40 on the canvas.\n\n  var stave = new VF.Stave(10, 40, 400); // Add a clef and time signature.\n\n  stave.addClef(\"treble\").addTimeSignature(\"4/4\"); // Set the context of the stave our previous exposed context and execute the method draw !\n\n  stave.setContext(context).draw();\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"music-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MusicNotation;","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js"],"names":["React","Vex","MusicNotation","VF","Flow","WorkspaceInformation","canvas","document","getElementById","canvasWidth","canvasHeight","renderer","Renderer","Backends","CANVAS","resize","context","getContext","setFont","setBackgroundFillStyle","stave","Stave","addClef","addTimeSignature","setContext","draw"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1BC,EAAAA,EAAE,GAAGF,GAAG,CAACG,IAAT,CAD0B,CAG1B;;AACA,MAAIC,oBAAoB,GAAG;AACvB;AACAC,IAAAA,MAAM,EAAEC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAFe;AAGvB;AACAC,IAAAA,WAAW,EAAE,GAJU;AAKvBC,IAAAA,YAAY,EAAE;AALS,GAA3B,CAJ0B,CAY1B;;AACA,MAAIC,QAAQ,GAAG,IAAIR,EAAE,CAACS,QAAP,CACXP,oBAAoB,CAACC,MADV,EAEXH,EAAE,CAACS,QAAH,CAAYC,QAAZ,CAAqBC,MAFV,CAAf,CAb0B,CAkB1B;;AACAH,EAAAA,QAAQ,CAACI,MAAT,CAAgBV,oBAAoB,CAACI,WAArC,EAAkDJ,oBAAoB,CAACK,YAAvE,EAnB0B,CAqB1B;;AACA,MAAIM,OAAO,GAAGL,QAAQ,CAACM,UAAT,EAAd,CAtB0B,CAwB1B;;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,OAAhB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiCC,sBAAjC,CAAwD,MAAxD;AAGA;;;AAGA;;AACA,MAAIC,KAAK,GAAG,IAAIjB,EAAE,CAACkB,KAAP,CAAa,EAAb,EAAiB,EAAjB,EAAqB,GAArB,CAAZ,CAhC0B,CAiC1B;;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAc,QAAd,EAAwBC,gBAAxB,CAAyC,KAAzC,EAlC0B,CAmC1B;;AACAH,EAAAA,KAAK,CAACI,UAAN,CAAiBR,OAAjB,EAA0BS,IAA1B;AAEA,sBACE;AAAQ,IAAA,EAAE,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAID,CA1CD;;AA4CA,eAAevB,aAAf","sourcesContent":["import React from 'react'\nimport Vex from 'vexflow'\n\nconst MusicNotation = () => {\n  VF = Vex.Flow;\n\n  // We created an object to store the information about the workspace\n  var WorkspaceInformation = {\n      // The <canvas> element in which you're going to work\n      canvas: document.getElementById(\"some-canvas-id\"),\n      // Vex creates a canvas with specific dimensions\n      canvasWidth: 500,\n      canvasHeight: 500\n  };\n\n  // Create a renderer with Canvas\n  var renderer = new VF.Renderer(\n      WorkspaceInformation.canvas,\n      VF.Renderer.Backends.CANVAS\n  );\n\n  // Use the renderer to give the dimensions to the canvas\n  renderer.resize(WorkspaceInformation.canvasWidth, WorkspaceInformation.canvasHeight);\n\n  // Expose the context of the renderer\n  var context = renderer.getContext();\n\n  // And give some style to our canvas\n  context.setFont(\"Arial\", 10, \"\").setBackgroundFillStyle(\"#eed\");\n\n\n  /**\n   * Creating a new stave\n   */\n  // Create a stave of width 400 at position x10, y40 on the canvas.\n  var stave = new VF.Stave(10, 40, 400);\n  // Add a clef and time signature.\n  stave.addClef(\"treble\").addTimeSignature(\"4/4\");\n  // Set the context of the stave our previous exposed context and execute the method draw !\n  stave.setContext(context).draw();\n\n  return (\n    <canvas id=\"music-canvas\">\n    </canvas>\n  )\n}\n\nexport default MusicNotation\n"]},"metadata":{},"sourceType":"module"}