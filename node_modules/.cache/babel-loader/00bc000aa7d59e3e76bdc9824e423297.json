{"ast":null,"code":"// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() {\n    return 'stavetempo';\n  }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold'\n    };\n    this.render_options = {\n      glyph_font_scale: 30 // font size for note\n\n    };\n  }\n\n  getCategory() {\n    return StaveTempo.CATEGORY;\n  }\n\n  setTempo(tempo) {\n    this.tempo = tempo;\n    return this;\n  }\n\n  setShiftX(x) {\n    this.shift_x = x;\n    return this;\n  }\n\n  setShiftY(y) {\n    this.shift_y = y;\n    return this;\n  }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n    const options = this.render_options; // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.getGlyphProps(duration);\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale; // Draw stem and flags\n\n      if (code.stem) {\n        let stem_height = 30;\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n        stem_height *= scale;\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem, {\n            category: 'flag.staveTempo'\n          });\n          if (!dots) x += 6 * scale;\n        }\n      } // Draw dot\n\n\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/stavetempo.js"],"names":["Flow","Modifier","StaveModifier","Glyph","StaveTempo","CATEGORY","constructor","tempo","x","shift_y","setAttribute","position","Position","ABOVE","shift_x","font","family","size","weight","render_options","glyph_font_scale","getCategory","setTempo","setShiftX","setShiftY","y","draw","stave","ctx","checkContext","setRendered","options","scale","name","duration","dots","bpm","getYForTopText","save","setFont","fillText","measureText","width","code","getGlyphProps","renderGlyph","code_head","getWidth","stem","stem_height","beam_count","y_top","fillRect","flag","code_flag_upstem","category","i","beginPath","arc","Math","PI","fill","restore"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\n\nimport { Flow } from './tables';\nimport { Modifier } from './modifier';\nimport { StaveModifier } from './stavemodifier';\nimport { Glyph } from './glyph';\n\nexport class StaveTempo extends StaveModifier {\n  static get CATEGORY() { return 'stavetempo'; }\n\n  constructor(tempo, x, shift_y) {\n    super();\n    this.setAttribute('type', 'StaveTempo');\n\n    this.tempo = tempo;\n    this.position = Modifier.Position.ABOVE;\n    this.x = x;\n    this.shift_x = 10;\n    this.shift_y = shift_y;\n    this.font = {\n      family: 'times',\n      size: 14,\n      weight: 'bold',\n    };\n    this.render_options = {\n      glyph_font_scale: 30,  // font size for note\n    };\n  }\n  getCategory() { return StaveTempo.CATEGORY; }\n  setTempo(tempo) { this.tempo = tempo; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  draw(stave, shift_x) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    const options = this.render_options;\n    // FIXME: What does the '38' mean? Why 38? Is that supposed to\n    // be the default font size for standard notation?\n    const scale = options.glyph_font_scale / 38;\n    const name = this.tempo.name;\n    const duration = this.tempo.duration;\n    const dots = this.tempo.dots;\n    const bpm = this.tempo.bpm;\n    const font = this.font;\n    let x = this.x + this.shift_x + shift_x;\n    const y = stave.getYForTopText(1) + this.shift_y;\n\n    ctx.save();\n\n    if (name) {\n      ctx.setFont(font.family, font.size, font.weight);\n      ctx.fillText(name, x, y);\n      x += ctx.measureText(name).width;\n    }\n\n    if (duration && bpm) {\n      ctx.setFont(font.family, font.size, 'normal');\n\n      if (name) {\n        x += ctx.measureText(' ').width;\n        ctx.fillText('(', x, y);\n        x += ctx.measureText('(').width;\n      }\n\n      const code = Flow.getGlyphProps(duration);\n\n      x += 3 * scale;\n      Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n      x += code.getWidth() * scale;\n\n      // Draw stem and flags\n      if (code.stem) {\n        let stem_height = 30;\n\n        if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n        stem_height *= scale;\n\n        const y_top = y - stem_height;\n        ctx.fillRect(x - scale, y_top, scale, stem_height);\n\n        if (code.flag) {\n          Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale,\n            code.code_flag_upstem, { category: 'flag.staveTempo' });\n\n          if (!dots) x += 6 * scale;\n        }\n      }\n\n      // Draw dot\n      for (let i = 0; i < dots; i++) {\n        x += 6 * scale;\n        ctx.beginPath();\n        ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n        ctx.fill();\n      }\n\n      ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n    }\n\n    ctx.restore();\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}