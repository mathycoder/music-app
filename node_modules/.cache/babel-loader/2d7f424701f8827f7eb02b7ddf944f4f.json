{"ast":null,"code":"// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { GlyphNote } from './glyphnote';\nimport { RepeatNote } from './repeatnote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote'; // To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\n\nfunction L(...args) {\n  if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args);\n}\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF'\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: ''\n      }\n    };\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({\n      renderer: {\n        elementId,\n        width,\n        height\n      }\n    });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const {\n      elementId,\n      backend,\n      width,\n      height,\n      background\n    } = this.options.renderer;\n\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() {\n    return this.context;\n  }\n\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  getStave() {\n    return this.stave;\n  }\n\n  getVoices() {\n    return this.voices;\n  } // Returns pixels from current stave spacing.\n\n\n  space(spacing) {\n    return this.options.stave.space * spacing;\n  }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space\n      }\n    });\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3\n      }\n    });\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GlyphNote(glyph, noteStruct, options) {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  RepeatNote(type, noteStruct, options) {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {}\n    });\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default'\n      }\n    });\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {}\n    });\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {}\n    });\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {}\n    });\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {}\n    });\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {}\n    });\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots\n    });\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {}\n    });\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {}\n    });\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params) {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {}\n    });\n    const voice = new Voice(params.time, params.options);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {}\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {}\n    });\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: []\n      }\n    });\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {}\n    });\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined\n      }\n    });\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices\n    }, params.text);\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {}\n    });\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices\n    });\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false\n      }\n    });\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to\n    });\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1\n      }\n    });\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position\n    });\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed'\n      }\n    });\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {}\n    });\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/factory.js"],"names":["Vex","Accidental","Articulation","Annotation","Formatter","FretHandFinger","StringNumber","TextDynamics","ModifierContext","MultiMeasureRest","Renderer","Stave","StaveTie","StaveLine","StaveNote","GlyphNote","RepeatNote","StaveConnector","System","TickContext","Tuplet","Voice","Beam","Curve","GraceNote","GraceNoteGroup","NoteSubGroup","EasyScore","TimeSigNote","KeySigNote","ClefNote","PedalMarking","TextBracket","VibratoBracket","GhostNote","BarNote","TabNote","TabStave","TextNote","L","args","Factory","DEBUG","X","MakeException","setDefaults","params","defaults","default_options","options","Object","assign","constructor","stave","space","renderer","context","elementId","backend","Backends","SVG","width","height","background","font","face","point","style","setOptions","newFromElementId","reset","renderQ","systems","staves","voices","getOptions","key","initRenderer","buildContext","getContext","setContext","getStave","getVoices","spacing","x","y","spacing_between_lines_px","push","noteStruct","note","setStave","glyph","type","ghostNote","textNoteStruct","textNote","barNote","size","clefNote","annotation","time","timeSigNote","keySigNote","cancelKey","alterKey","group","notes","slur","accid","text","vJustify","hJustify","fontFamily","fontSize","fontWeight","setJustification","setVerticalJustification","setFont","position","articulation","setPosition","duration","dots","line","Fingering","number","fingering","stringNumber","multimeasurerest","number_of_measures","voice","top_stave","bottom_stave","connector","setType","tuplet","autoStem","secondaryBeamBreaks","beam","breakSecondaryAt","from","to","curve","first_indices","last_indices","direction","undefined","tie","first_note","last_note","setDirection","setText","harsh","vibratoBracket","start","stop","setLine","setHarsh","superscript","textBracket","factory","system","pedal","setStyle","StylesString","draw","forEach","i","format","isRendered"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a high level API around VexFlow. It will eventually\n// become the canonical way to use VexFlow.\n//\n// *This API is currently DRAFT*\n\nimport { Vex } from './vex';\nimport { Accidental } from './accidental';\nimport { Articulation } from './articulation';\nimport { Annotation } from './annotation';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { StringNumber } from './stringnumber';\nimport { TextDynamics } from './textdynamics';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Renderer } from './renderer';\nimport { Stave } from './stave';\nimport { StaveTie } from './stavetie';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { GlyphNote } from './glyphnote';\nimport { RepeatNote } from './repeatnote';\nimport { StaveConnector } from './staveconnector';\nimport { System } from './system';\nimport { TickContext } from './tickcontext';\nimport { Tuplet } from './tuplet';\nimport { Voice } from './voice';\nimport { Beam } from './beam';\nimport { Curve } from './curve';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { EasyScore } from './easyscore';\nimport { TimeSigNote } from './timesignote';\nimport { KeySigNote } from './keysignote';\nimport { ClefNote } from './clefnote';\nimport { PedalMarking } from './pedalmarking';\nimport { TextBracket } from './textbracket';\nimport { VibratoBracket } from './vibratobracket';\nimport { GhostNote } from './ghostnote';\nimport { BarNote } from './barnote';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextNote } from './textnote';\n\n// To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`.\nfunction L(...args) { if (Factory.DEBUG) Vex.L('Vex.Flow.Factory', args); }\n\nexport const X = Vex.MakeException('FactoryError');\n\nfunction setDefaults(params = {}, defaults) {\n  const default_options = defaults.options;\n  params = Object.assign(defaults, params);\n  params.options = Object.assign(default_options, params.options);\n  return params;\n}\n\nexport class Factory {\n  constructor(options) {\n    L('New factory: ', options);\n    const defaults = {\n      stave: {\n        space: 10,\n      },\n      renderer: {\n        context: null,\n        elementId: '',\n        backend: Renderer.Backends.SVG,\n        width: 500,\n        height: 200,\n        background: '#FFF',\n      },\n      font: {\n        face: 'Arial',\n        point: 10,\n        style: '',\n      },\n    };\n\n    this.options = defaults;\n    this.setOptions(options);\n  }\n\n  static newFromElementId(elementId, width = 500, height = 200) {\n    return new Factory({ renderer: { elementId, width, height } });\n  }\n\n  reset() {\n    this.renderQ = [];\n    this.systems = [];\n    this.staves = [];\n    this.voices = [];\n    this.stave = null; // current stave\n  }\n\n  getOptions() { return this.options; }\n  setOptions(options) {\n    for (const key of ['stave', 'renderer', 'font']) {\n      Object.assign(this.options[key], options[key]);\n    }\n    if (this.options.renderer.elementId !== null || this.options.renderer.context) {\n      this.initRenderer();\n    }\n\n    this.reset();\n  }\n\n  initRenderer() {\n    const { elementId, backend, width, height, background } = this.options.renderer;\n    if (elementId === '') {\n      throw new X('HTML DOM element not set in Factory');\n    }\n\n    this.context = Renderer.buildContext(elementId, backend, width, height, background);\n  }\n\n  getContext() { return this.context; }\n  setContext(context) { this.context = context; return this; }\n  getStave() { return this.stave; }\n  getVoices() { return this.voices; }\n\n  // Returns pixels from current stave spacing.\n  space(spacing) { return this.options.stave.space * spacing; }\n\n  Stave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space,\n      },\n    });\n\n    const stave = new Stave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  TabStave(params) {\n    params = setDefaults(params, {\n      x: 0,\n      y: 0,\n      width: this.options.renderer.width - this.space(1),\n      options: {\n        spacing_between_lines_px: this.options.stave.space * 1.3,\n      },\n    });\n\n    const stave = new TabStave(params.x, params.y, params.width, params.options);\n    this.staves.push(stave);\n    stave.setContext(this.context);\n    this.stave = stave;\n    return stave;\n  }\n\n  StaveNote(noteStruct) {\n    const note = new StaveNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GlyphNote(glyph, noteStruct, options) {\n    const note = new GlyphNote(glyph, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  RepeatNote(type, noteStruct, options) {\n    const note = new RepeatNote(type, noteStruct, options);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GhostNote(noteStruct) {\n    const ghostNote = new GhostNote(noteStruct);\n    if (this.stave) ghostNote.setStave(this.stave);\n    ghostNote.setContext(this.context);\n    this.renderQ.push(ghostNote);\n    return ghostNote;\n  }\n\n  TextNote(textNoteStruct) {\n    const textNote = new TextNote(textNoteStruct);\n    if (this.stave) textNote.setStave(this.stave);\n    textNote.setContext(this.context);\n    this.renderQ.push(textNote);\n    return textNote;\n  }\n\n  BarNote(params) {\n    params = setDefaults(params, {\n      type: 'single',\n      options: {},\n    });\n\n    const barNote = new BarNote(params.type);\n    if (this.stave) barNote.setStave(this.stave);\n    barNote.setContext(this.context);\n    this.renderQ.push(barNote);\n    return barNote;\n  }\n\n  ClefNote(params) {\n    params = setDefaults(params, {\n      type: 'treble',\n      options: {\n        size: 'default',\n      },\n    });\n\n    const clefNote = new ClefNote(params.type, params.options.size, params.options.annotation);\n    if (this.stave) clefNote.setStave(this.stave);\n    clefNote.setContext(this.context);\n    this.renderQ.push(clefNote);\n    return clefNote;\n  }\n\n  TimeSigNote(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n\n    const timeSigNote = new TimeSigNote(params.time);\n    if (this.stave) timeSigNote.setStave(this.stave);\n    timeSigNote.setContext(this.context);\n    this.renderQ.push(timeSigNote);\n    return timeSigNote;\n  }\n\n  KeySigNote(params) {\n    const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n    if (this.stave) keySigNote.setStave(this.stave);\n    keySigNote.setContext(this.context);\n    this.renderQ.push(keySigNote);\n    return keySigNote;\n  }\n\n  TabNote(noteStruct) {\n    const note = new TabNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    this.renderQ.push(note);\n    return note;\n  }\n\n  GraceNote(noteStruct) {\n    const note = new GraceNote(noteStruct);\n    if (this.stave) note.setStave(this.stave);\n    note.setContext(this.context);\n    return note;\n  }\n\n  GraceNoteGroup(params) {\n    const group = new GraceNoteGroup(params.notes, params.slur);\n    group.setContext(this.context);\n    return group;\n  }\n\n  Accidental(params) {\n    params = setDefaults(params, {\n      type: null,\n      options: {},\n    });\n\n    const accid = new Accidental(params.type);\n    accid.setContext(this.context);\n    return accid;\n  }\n\n  Annotation(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      vJustify: 'below',\n      hJustify: 'center',\n      fontFamily: 'Times',\n      fontSize: 14,\n      fontWeight: 'bold italic',\n      options: {},\n    });\n\n    const annotation = new Annotation(params.text);\n    annotation.setJustification(params.hJustify);\n    annotation.setVerticalJustification(params.vJustify);\n    annotation.setFont(params.fontFamily, params.fontSize, params.fontWeight);\n    annotation.setContext(this.context);\n    return annotation;\n  }\n\n  Articulation(params) {\n    params = setDefaults(params, {\n      type: 'a.',\n      position: 'above',\n      options: {},\n    });\n\n    const articulation = new Articulation(params.type);\n    articulation.setPosition(params.position);\n    articulation.setContext(this.context);\n    return articulation;\n  }\n\n  TextDynamics(params) {\n    params = setDefaults(params, {\n      text: 'p',\n      duration: 'q',\n      dots: 0,\n      line: 0,\n      options: {},\n    });\n\n    const text = new TextDynamics({\n      text: params.text,\n      line: params.line,\n      duration: params.duration,\n      dots: params.dots,\n    });\n\n    if (this.stave) text.setStave(this.stave);\n    text.setContext(this.context);\n    this.renderQ.push(text);\n    return text;\n  }\n\n  Fingering(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const fingering = new FretHandFinger(params.number);\n    fingering.setPosition(params.position);\n    fingering.setContext(this.context);\n    return fingering;\n  }\n\n  StringNumber(params) {\n    params = setDefaults(params, {\n      number: '0',\n      position: 'left',\n      options: {},\n    });\n\n    const stringNumber = new StringNumber(params.number);\n    stringNumber.setPosition(params.position);\n    stringNumber.setContext(this.context);\n    return stringNumber;\n  }\n\n  TickContext() {\n    return new TickContext().setContext(this.context);\n  }\n\n  ModifierContext() {\n    return new ModifierContext();\n  }\n\n  MultiMeasureRest(params) {\n    const multimeasurerest = new MultiMeasureRest(params.number_of_measures, params);\n    multimeasurerest.setContext(this.context);\n    this.renderQ.push(multimeasurerest);\n    return multimeasurerest;\n  }\n\n  Voice(params) {\n    params = setDefaults(params, {\n      time: '4/4',\n      options: {},\n    });\n    const voice = new Voice(params.time, params.options);\n    this.voices.push(voice);\n    return voice;\n  }\n\n  StaveConnector(params) {\n    params = setDefaults(params, {\n      top_stave: null,\n      bottom_stave: null,\n      type: 'double',\n      options: {},\n    });\n    const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n    connector.setType(params.type).setContext(this.context);\n    this.renderQ.push(connector);\n    return connector;\n  }\n\n  Formatter() {\n    return new Formatter();\n  }\n\n  Tuplet(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const tuplet = new Tuplet(params.notes, params.options).setContext(this.context);\n    this.renderQ.push(tuplet);\n    return tuplet;\n  }\n\n  Beam(params) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        autoStem: false,\n        secondaryBeamBreaks: [],\n      },\n    });\n\n    const beam = new Beam(params.notes, params.options.autoStem).setContext(this.context);\n    beam.breakSecondaryAt(params.options.secondaryBeamBreaks);\n    this.renderQ.push(beam);\n    return beam;\n  }\n\n  Curve(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {},\n    });\n\n    const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n    this.renderQ.push(curve);\n    return curve;\n  }\n\n  StaveTie(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      text: null,\n      options: {\n        direction: undefined,\n      },\n    });\n\n    const tie = new StaveTie({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    }, params.text);\n\n    if (params.options.direction) tie.setDirection(params.options.direction);\n    tie.setContext(this.context);\n    this.renderQ.push(tie);\n    return tie;\n  }\n\n  StaveLine(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      first_indices: [0],\n      last_indices: [0],\n      options: {},\n    });\n\n    const line = new StaveLine({\n      first_note: params.from,\n      last_note: params.to,\n      first_indices: params.first_indices,\n      last_indices: params.last_indices,\n    });\n\n    if (params.options.text) line.setText(params.options.text);\n    if (params.options.font) line.setFont(params.options.font);\n\n    line.setContext(this.context);\n    this.renderQ.push(line);\n    return line;\n  }\n\n  VibratoBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      options: {\n        harsh: false,\n      },\n    });\n\n    const vibratoBracket = new VibratoBracket({\n      start: params.from,\n      stop: params.to,\n    });\n\n    if (params.options.line) vibratoBracket.setLine(params.options.line);\n    if (params.options.harsh) vibratoBracket.setHarsh(params.options.harsh);\n\n    vibratoBracket.setContext(this.context);\n    this.renderQ.push(vibratoBracket);\n\n    return vibratoBracket;\n  }\n\n  TextBracket(params) {\n    params = setDefaults(params, {\n      from: null,\n      to: null,\n      text: '',\n      options: {\n        superscript: '',\n        position: 1,\n      },\n    });\n\n    const textBracket = new TextBracket({\n      start: params.from,\n      stop: params.to,\n      text: params.text,\n      superscript: params.options.superscript,\n      position: params.options.position,\n    });\n\n    if (params.options.line) textBracket.setLine(params.options.line);\n    if (params.options.font) textBracket.setFont(params.options.font);\n\n    textBracket.setContext(this.context);\n    this.renderQ.push(textBracket);\n    return textBracket;\n  }\n\n  System(params = {}) {\n    params.factory = this;\n    const system = new System(params).setContext(this.context);\n    this.systems.push(system);\n    return system;\n  }\n\n  EasyScore(params = {}) {\n    params.factory = this;\n    return new EasyScore(params);\n  }\n\n  PedalMarking(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {\n        style: 'mixed',\n      },\n    });\n\n    const pedal = new PedalMarking(params.notes);\n    pedal.setStyle(PedalMarking.StylesString[params.options.style]);\n    pedal.setContext(this.context);\n    this.renderQ.push(pedal);\n    return pedal;\n  }\n\n  NoteSubGroup(params = {}) {\n    params = setDefaults(params, {\n      notes: [],\n      options: {},\n    });\n\n    const group = new NoteSubGroup(params.notes);\n    group.setContext(this.context);\n    return group;\n  }\n\n  draw() {\n    this.systems.forEach(i => i.setContext(this.context).format());\n    this.staves.forEach(i => i.setContext(this.context).draw());\n    this.voices.forEach(i => i.setContext(this.context).draw());\n    this.renderQ.forEach(i => {\n      if (!i.isRendered()) i.setContext(this.context).draw();\n    });\n    this.systems.forEach(i => i.setContext(this.context).draw());\n    this.reset();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}