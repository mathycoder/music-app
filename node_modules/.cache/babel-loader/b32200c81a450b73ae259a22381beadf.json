{"ast":null,"code":"// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({\n      duration: 'b'\n    });\n    this.setAttribute('type', 'TimeSigNote');\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width); // Note properties\n\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n\n}","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/node_modules/vexflow/src/timesignote.js"],"names":["Note","TimeSignature","TimeSigNote","constructor","timeSpec","customPadding","duration","setAttribute","timeSignature","timeSig","getTimeSig","setWidth","glyph","getMetrics","width","ignore_ticks","getBoundingBox","addToModifierContext","preFormat","setPreFormatted","draw","stave","checkContext","setRendered","getContext","setContext","context","setStave","setYShift","getYForLine","line","getYForGlyphs","renderToStave","getAbsoluteX"],"mappings":"AAAA;AACA;AAEA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAO,MAAMC,WAAN,SAA0BF,IAA1B,CAA+B;AACpCG,EAAAA,WAAW,CAACC,QAAD,EAAWC,aAAX,EAA0B;AACnC,UAAM;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAN;AACA,SAAKC,YAAL,CAAkB,MAAlB,EAA0B,aAA1B;AAEA,UAAMC,aAAa,GAAG,IAAIP,aAAJ,CAAkBG,QAAlB,EAA4BC,aAA5B,CAAtB;AACA,SAAKI,OAAL,GAAeD,aAAa,CAACE,UAAd,EAAf;AACA,SAAKC,QAAL,CAAc,KAAKF,OAAL,CAAaG,KAAb,CAAmBC,UAAnB,GAAgCC,KAA9C,EANmC,CAQnC;;AACA,SAAKC,YAAL,GAAoB,IAApB;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAO,MAAMA,cAAN,EAAP;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,SAAS,GAAG;AACV,SAAKC,eAAL,CAAqB,IAArB;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,SAAKC,KAAL,CAAWC,YAAX;AACA,SAAKC,WAAL;;AAEA,QAAI,CAAC,KAAKd,OAAL,CAAaG,KAAb,CAAmBY,UAAnB,EAAL,EAAsC;AACpC,WAAKf,OAAL,CAAaG,KAAb,CAAmBa,UAAnB,CAA8B,KAAKC,OAAnC;AACD;;AAED,SAAKjB,OAAL,CAAaG,KAAb,CAAmBe,QAAnB,CAA4B,KAAKN,KAAjC;AACA,SAAKZ,OAAL,CAAaG,KAAb,CAAmBgB,SAAnB,CACE,KAAKP,KAAL,CAAWQ,WAAX,CAAuB,KAAKpB,OAAL,CAAaqB,IAApC,IAA4C,KAAKT,KAAL,CAAWU,aAAX,EAD9C;AAEA,SAAKtB,OAAL,CAAaG,KAAb,CAAmBoB,aAAnB,CAAiC,KAAKC,YAAL,EAAjC;AACD;;AAvCmC","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\n\nexport class TimeSigNote extends Note {\n  constructor(timeSpec, customPadding) {\n    super({ duration: 'b' });\n    this.setAttribute('type', 'TimeSigNote');\n\n    const timeSignature = new TimeSignature(timeSpec, customPadding);\n    this.timeSig = timeSignature.getTimeSig();\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n    // Note properties\n    this.ignore_ticks = true;\n  }\n\n  getBoundingBox() {\n    return super.getBoundingBox();\n  }\n\n  addToModifierContext() {\n    /* overridden to ignore */\n    return this;\n  }\n\n  preFormat() {\n    this.setPreFormatted(true);\n    return this;\n  }\n\n  draw() {\n    this.stave.checkContext();\n    this.setRendered();\n\n    if (!this.timeSig.glyph.getContext()) {\n      this.timeSig.glyph.setContext(this.context);\n    }\n\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setYShift(\n      this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n    this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n  }\n}\n"]},"metadata":{},"sourceType":"module"}