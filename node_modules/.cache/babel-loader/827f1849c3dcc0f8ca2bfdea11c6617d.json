{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/Fretboard.js\";\nimport React, { useState } from 'react';\nimport './css/fretboard.css';\n\nconst Fretboard = () => {\n  const [overFret, setOverFret] = useState({\n    string: null,\n    fret: null\n  });\n  const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n  const STRINGS = ['E', 'B', 'G', 'D', 'A', 'E'];\n\n  const currentNote = () => {\n    if (!overFret) return null;\n    return NOTES.indexOf(STRINGS[overFret.string]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fretboard-wrapper noselect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, [0, 1, 2, 3, 4, 5].map(stringNum => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"string\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(fretNum => /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: () => setOverFret({\n      string: stringNum,\n      fret: fretNum\n    }),\n    onMouseLeave: () => setOverFret({\n      string: null,\n      fret: null\n    }),\n    className: `fret ${fretNum === 0 ? 'base' : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, overFret.string === stringNum && overFret.fret === fretNum ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, currentNote())) : null)))));\n};\n\nexport default Fretboard;","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/Fretboard.js"],"names":["React","useState","Fretboard","overFret","setOverFret","string","fret","NOTES","STRINGS","currentNote","indexOf","map","stringNum","fretNum"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,qBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AAACI,IAAAA,MAAM,EAAE,IAAT;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAAD,CAAxC;AACA,QAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,EAA4B,GAA5B,EAAiC,IAAjC,EAAuC,GAAvC,EAA4C,GAA5C,EAAiD,IAAjD,EAAuD,GAAvD,EAA4D,IAA5D,CAAd;AACA,QAAMC,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAAhB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAI,CAACN,QAAL,EAAe,OAAO,IAAP;AACf,WAAOI,KAAK,CAACG,OAAN,CAAcF,OAAO,CAACL,QAAQ,CAACE,MAAV,CAArB,CAAP;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAcM,GAAd,CAAkBC,SAAS,iBAC1B;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,EAArB,EAAwB,EAAxB,EAA2B,EAA3B,EAA+BD,GAA/B,CAAmCE,OAAO,iBACzC;AACE,IAAA,YAAY,EAAE,MAAMT,WAAW,CAAC;AAACC,MAAAA,MAAM,EAAEO,SAAT;AAAoBN,MAAAA,IAAI,EAAEO;AAA1B,KAAD,CADjC;AAEE,IAAA,YAAY,EAAE,MAAMT,WAAW,CAAC;AAACC,MAAAA,MAAM,EAAE,IAAT;AAAeC,MAAAA,IAAI,EAAE;AAArB,KAAD,CAFjC;AAGE,IAAA,SAAS,EAAG,QAAOO,OAAO,KAAK,CAAZ,GAAgB,MAAhB,GAAyB,IAAK,EAHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGV,QAAQ,CAACE,MAAT,KAAoBO,SAApB,IAAiCT,QAAQ,CAACG,IAAT,KAAkBO,OAAnD,gBACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,WAAW,EADd,CADF,CADH,GAMG,IAXN,CADD,CADH,CADD,CADH,CADF;AAwBD,CAlCD;;AAoCA,eAAeP,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport './css/fretboard.css'\n\nconst Fretboard = () => {\n  const [overFret, setOverFret] = useState({string: null, fret: null})\n  const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']\n  const STRINGS = ['E', 'B', 'G', 'D', 'A', 'E']\n\n  const currentNote = () => {\n    if (!overFret) return null\n    return NOTES.indexOf(STRINGS[overFret.string])\n  }\n\n  return (\n    <div className=\"fretboard-wrapper noselect\">\n      {[0,1,2,3,4,5].map(stringNum => (\n        <div className=\"string\">\n          {[0,1,2,3,4,5,6,7,8,9,10,11,12].map(fretNum => (\n            <div\n              onMouseEnter={() => setOverFret({string: stringNum, fret: fretNum})}\n              onMouseLeave={() => setOverFret({string: null, fret: null})}\n              className={`fret ${fretNum === 0 ? 'base' : null}`}\n            >\n              {overFret.string === stringNum && overFret.fret === fretNum\n                ? <div className=\"note\">\n                    <div className=\"note-text\">\n                      {currentNote()}\n                    </div>\n                  </div>\n                : null\n              }\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Fretboard\n"]},"metadata":{},"sourceType":"module"}