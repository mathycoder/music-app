{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js\";\nimport React, { useRef, useEffect } from 'react';\nimport Vex from 'vexflow';\n\nconst MusicNotation = () => {\n  const vf = useRef();\n  const score = useRef();\n  const system = useRef();\n  useEffect(() => {\n    vf.current = new Vex.Flow.Factory({\n      renderer: {\n        elementId: 'music-canvas'\n      }\n    });\n    score.current = vf.current.EasyScore();\n    system.current = vf.current.System();\n    system.current.addStave({\n      voices: [score.current.voice(score.current.notes('C#5/q, B4, A4, G#4'))]\n    }).addClef('treble').addTimeSignature('4/4');\n    vf.current.draw();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"music-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentNote: note => dispatch(setCurrentNote(note))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MusicNotation);","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js"],"names":["React","useRef","useEffect","Vex","MusicNotation","vf","score","system","current","Flow","Factory","renderer","elementId","EasyScore","System","addStave","voices","voice","notes","addClef","addTimeSignature","draw","mapDispatchToProps","dispatch","setCurrentNote","note","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,EAAE,GAAGJ,MAAM,EAAjB;AACA,QAAMK,KAAK,GAAGL,MAAM,EAApB;AACA,QAAMM,MAAM,GAAGN,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,EAAE,CAACG,OAAH,GAAa,IAAIL,GAAG,CAACM,IAAJ,CAASC,OAAb,CAAqB;AAACC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ;AAAX,KAArB,CAAb;AACAN,IAAAA,KAAK,CAACE,OAAN,GAAgBH,EAAE,CAACG,OAAH,CAAWK,SAAX,EAAhB;AACAN,IAAAA,MAAM,CAACC,OAAP,GAAiBH,EAAE,CAACG,OAAH,CAAWM,MAAX,EAAjB;AAEAP,IAAAA,MAAM,CAACC,OAAP,CAAeO,QAAf,CAAwB;AACtBC,MAAAA,MAAM,EAAE,CAACV,KAAK,CAACE,OAAN,CAAcS,KAAd,CAAoBX,KAAK,CAACE,OAAN,CAAcU,KAAd,CAAoB,oBAApB,CAApB,CAAD;AADc,KAAxB,EAEGC,OAFH,CAEW,QAFX,EAEqBC,gBAFrB,CAEsC,KAFtC;AAIAf,IAAAA,EAAE,CAACG,OAAH,CAAWa,IAAX;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CApBD;;AAsBA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,cAAc,EAAEC,IAAI,IAAIF,QAAQ,CAACC,cAAc,CAACC,IAAD,CAAf;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAeC,OAAO,CAAC,IAAD,EAAOJ,kBAAP,CAAP,CAAkClB,aAAlC,CAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport Vex from 'vexflow'\n\nconst MusicNotation = () => {\n  const vf = useRef()\n  const score = useRef()\n  const system = useRef()\n\n  useEffect(() => {\n    vf.current = new Vex.Flow.Factory({renderer: {elementId: 'music-canvas'}});\n    score.current = vf.current.EasyScore();\n    system.current = vf.current.System();\n\n    system.current.addStave({\n      voices: [score.current.voice(score.current.notes('C#5/q, B4, A4, G#4'))]\n    }).addClef('treble').addTimeSignature('4/4');\n\n    vf.current.draw();\n  }, [])\n\n  return (\n    <div id=\"music-canvas\"></div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentNote: note => dispatch(setCurrentNote(note))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(MusicNotation)\n"]},"metadata":{},"sourceType":"module"}