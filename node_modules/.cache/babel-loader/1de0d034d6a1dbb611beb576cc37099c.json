{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/Fretboard.js\";\nimport React, { useState } from 'react';\nimport './css/fretboard.css';\nimport * as Tone from 'tone';\nimport { connect } from 'react-redux';\nimport { setCurrentNote } from '../actions/currentNoteActions.js';\n\nconst Fretboard = ({\n  setCurrentNote\n}) => {\n  const [overFret, setOverFret] = useState({\n    string: null,\n    fret: null\n  });\n  const NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n  const STRING_INDICES = [41, 35, 31, 26, 21, 16];\n  const synth = new Tone.Synth().toMaster(); // E2, A2, D3, G3, B3, E4\n  // C1 = 0\n  // C2 = 12\n  // C3 = 24\n  // C4 = 36\n\n  const currentNote = (withOctave = false) => {\n    if (!overFret) return null;\n    const rawStringIndex = STRING_INDICES[overFret.string];\n    const fretIndex = (rawStringIndex + overFret.fret) % 12;\n    const octave = Math.floor((rawStringIndex + overFret.fret) / 12) + 1;\n    return `${NOTES[fretIndex]}${withOctave ? octave : ''}`;\n  };\n\n  const clickNote = () => {\n    const currNote = currentNote(true);\n    synth.triggerAttackRelease(currNote, '8n');\n    setCurrentNote(currNote);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fretboard-wrapper noselect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, [0, 1, 2, 3, 4, 5].map(stringNum => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"string\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map(fretNum => /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: () => setOverFret({\n      string: stringNum,\n      fret: fretNum\n    }),\n    onMouseLeave: () => setOverFret({\n      string: null,\n      fret: null\n    }),\n    className: `fret ${fretNum === 0 ? 'base' : null}`,\n    onClick: () => clickNote(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, overFret.string === stringNum && overFret.fret === fretNum ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"note-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, currentNote())) : null)))));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentNote: note => dispatch(setCurrentNote(note))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Fretboard);","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/Fretboard.js"],"names":["React","useState","Tone","connect","setCurrentNote","Fretboard","overFret","setOverFret","string","fret","NOTES","STRING_INDICES","synth","Synth","toMaster","currentNote","withOctave","rawStringIndex","fretIndex","octave","Math","floor","clickNote","currNote","triggerAttackRelease","map","stringNum","fretNum","mapDispatchToProps","dispatch","note"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './css/fretboard.css'\nimport * as Tone from 'tone'\nimport { connect } from 'react-redux'\nimport { setCurrentNote } from '../actions/currentNoteActions.js'\n\nconst Fretboard = ({ setCurrentNote }) => {\n  const [overFret, setOverFret] = useState({string: null, fret: null})\n  const NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\n  const STRING_INDICES = [41, 35, 31, 26, 21, 16]\n  const synth = new Tone.Synth().toMaster();\n\n// E2, A2, D3, G3, B3, E4\n// C1 = 0\n// C2 = 12\n// C3 = 24\n// C4 = 36\n\n  const currentNote = (withOctave = false) => {\n    if (!overFret) return null\n    const rawStringIndex= STRING_INDICES[overFret.string]\n    const fretIndex = (rawStringIndex + overFret.fret) % 12\n    const octave = Math.floor((rawStringIndex + overFret.fret) / 12) + 1\n    return `${NOTES[fretIndex]}${withOctave ? octave : ''}`\n  }\n\n  const clickNote = () => {\n    const currNote = currentNote(true)\n    synth.triggerAttackRelease(currNote, '8n')\n    setCurrentNote(currNote)\n  }\n\n  return (\n    <div className=\"fretboard-wrapper noselect\">\n      {[0,1,2,3,4,5].map(stringNum => (\n        <div className=\"string\">\n          {[0,1,2,3,4,5,6,7,8,9,10,11,12].map(fretNum => (\n            <div\n              onMouseEnter={() => setOverFret({string: stringNum, fret: fretNum})}\n              onMouseLeave={() => setOverFret({string: null, fret: null})}\n              className={`fret ${fretNum === 0 ? 'base' : null}`}\n              onClick={() => clickNote()}\n            >\n              {overFret.string === stringNum && overFret.fret === fretNum\n                ? <div className=\"note\">\n                    <div className=\"note-text\">\n                      {currentNote()}\n                    </div>\n                  </div>\n                : null\n              }\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentNote: note => dispatch(setCurrentNote(note))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Fretboard)\n"]},"metadata":{},"sourceType":"module"}