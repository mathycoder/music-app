{"ast":null,"code":"var _jsxFileName = \"/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js\";\nimport React, { useRef } from 'react';\nimport Vex from 'vexflow';\n\nconst MusicNotation = () => {\n  const rendererRef = useRef();\n  let vf;\n  let score;\n  let system;\n\n  const setUpVf = () => {\n    vf = new Vex.Flow.Factory({\n      renderer: {\n        elementId: 'music-canvas'\n      }\n    });\n    score = vf.EasyScore();\n    system = vf.System();\n    system.addStave({\n      voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]\n    }).addClef('treble').addTimeSignature('4/4');\n    vf.draw();\n  };\n\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: rendererRef,\n    id: \"music-canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MusicNotation;","map":{"version":3,"sources":["/Users/adamsarli/Coding/music-app/src/components/MusicNotation.js"],"names":["React","useRef","Vex","MusicNotation","rendererRef","vf","score","system","setUpVf","Flow","Factory","renderer","elementId","EasyScore","System","addStave","voices","voice","notes","addClef","addTimeSignature","draw"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,WAAW,GAAGH,MAAM,EAA1B;AACA,MAAII,EAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,MAAJ;;AAEA,QAAMC,OAAO,GAAG,MAAM;AACpBH,IAAAA,EAAE,GAAG,IAAIH,GAAG,CAACO,IAAJ,CAASC,OAAb,CAAqB;AAACC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ;AAAX,KAArB,CAAL;AACAN,IAAAA,KAAK,GAAGD,EAAE,CAACQ,SAAH,EAAR;AACAN,IAAAA,MAAM,GAAGF,EAAE,CAACS,MAAH,EAAT;AAEAP,IAAAA,MAAM,CAACQ,QAAP,CAAgB;AACdC,MAAAA,MAAM,EAAE,CAACV,KAAK,CAACW,KAAN,CAAYX,KAAK,CAACY,KAAN,CAAY,oBAAZ,CAAZ,CAAD;AADM,KAAhB,EAEGC,OAFH,CAEW,QAFX,EAEqBC,gBAFrB,CAEsC,KAFtC;AAIAf,IAAAA,EAAE,CAACgB,IAAH;AACD,GAVD;;AAYA,sBACE;AACE,IAAA,GAAG,EAAEjB,WADP;AAEE,IAAA,EAAE,EAAC,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD,CAxBD;;AA0BA,eAAeD,aAAf","sourcesContent":["import React, { useRef } from 'react'\nimport Vex from 'vexflow'\n\nconst MusicNotation = () => {\n  const rendererRef = useRef()\n  let vf\n  let score\n  let system\n\n  const setUpVf = () => {\n    vf = new Vex.Flow.Factory({renderer: {elementId: 'music-canvas'}});\n    score = vf.EasyScore();\n    system = vf.System();\n\n    system.addStave({\n      voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]\n    }).addClef('treble').addTimeSignature('4/4');\n\n    vf.draw();\n  }\n\n  return (\n    <canvas\n      ref={rendererRef}\n      id=\"music-canvas\">\n    </canvas>\n  )\n}\n\nexport default MusicNotation\n"]},"metadata":{},"sourceType":"module"}